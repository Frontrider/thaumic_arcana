buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.11"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "com.matthewprenger.cursegradle"



sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

archivesBaseName="Thaumic Arcana"


curseforge {
    apiKey = System.env.curse_api_key != null?System.env.curse_api_key:"111111"
    project {
        id =  System.env.project_id != null?System.env.project_id:"111111"
        changelog = file("$changelog")
        releaseType = System.env.release_type != null?System.env.release_type:"release"
    }
}

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.4.2705"
    runDir = "run"
    mappings = "snapshot_20171003"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    replace '@VERSION@', project.version
    replace '@MODID@', modid
    replace '@NAME@', name
    //Replaces all text that matches the left side with the right.
    //replace '@FINGERPRINT@', project.findProperty('signSHA1')
    //Makes those replacement changes to the main mod class.
    //My mod class is set in my project's gradle.properties file.
    replaceIn "${mod_class}.java"
}

dependencies {
    testCompile("org.junit.jupiter:junit-jupiter-api:$junit_version")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junit_version")
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junit_version
    testCompile("org.junit.platform:junit-platform-runner:$junit_platform_version")

    testCompile group: 'org.mockito', name: 'mockito-all', version: mockito_version

    testCompile("com.jayway.jsonpath:json-path:$json_path_version")
    testCompile group: 'org.apache.commons', name: 'commons-text', version: commons_text_version

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
jar {

    manifest {

    }
}

test{
    useJUnitPlatform()
}