buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }

    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "idea"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.


compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}
repositories{
    jcenter()
    maven {
        url "http://maven.shadowfacts.net/"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
}

minecraft {
    version = "$mc_version-14.23.4.2705"
    runDir = "run"
    mappings = "snapshot_20171003"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    compile group: "net.shadowfacts", name: "Forgelin", version: "1.7.3"
    apiCompileOnly project(":thaumcraftApi")
    implementation files("thaumcraftApi/lib/Thaumcraft-1.12.2-6.1.BETA23-deobf.jar")

    testCompile("org.junit.jupiter:junit-jupiter-api:$junit_version")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junit_version")
    testCompile group: 'org.mockito', name: 'mockito-all', version: '2.0.2-beta'
    // Enable use of the JUnitPlatform Runner within the IDE
    testCompile("org.junit.platform:junit-platform-runner:$junit_platform_version")
    //testCompile("hu.frontrider.minecrafttestkit:minecrafttestkit:0.1")

    // compile against the JEI API but do not include it at runtime
    deobfProvided "mezz.jei:jei_${mc_version}:${jei_version}:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${mc_version}:${jei_version}"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
jar {
    manifest {
        attributes 'FMLAT': "${modid}.cfg"
    }
}
