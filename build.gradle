buildscript {
    ext.kotlin_version = '1.2.41'
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

apply plugin: "idea"
apply plugin: "kotlin"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

repositories {
    jcenter()
    maven {
        url "http://maven.shadowfacts.net/"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
}
configurations {
    shadow
    compile.extendsFrom shadow
}
minecraft {
    version = "1.12.2-14.23.4.2705"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20171003"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {

    // compile against the JEI API but do not include it at runtime
    deobfProvided "mezz.jei:jei_${mc_version}:${jei_version}:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${mc_version}:${jei_version}"
    compile group: "net.shadowfacts", name: "Forgelin", version: "1.7.3"
    apiCompile project(":thaumcraftApi")
    implementation files("thaumcraftApi/lib/Thaumcraft-1.12.2-6.1.BETA24-deobf.jar")
    compile 'org.javadelight:delight-nashorn-sandbox:0.1.16'
    testCompileOnly project(":thaumcraftApi")
    testRuntime files("thaumcraftApi/lib/Thaumcraft-1.12.2-6.1.BETA24-deobf.jar")

    testCompile("org.junit.jupiter:junit-jupiter-api:$junit_version")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junit_version")
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junit_version
    testCompile("org.junit.platform:junit-platform-runner:$junit_platform_version")

    testCompile group: 'org.mockito', name: 'mockito-all', version: mockito_version
    testCompile(files("lib/MinecraftTestKit-0.1-SNAPSHOT.jar"))
    testCompile("com.jayway.jsonpath:json-path:$json_path_version")
    testCompile group: 'org.apache.commons', name: 'commons-text', version: commons_text_version

    //shadowing a required library
    shadow 'org.javadelight:delight-nashorn-sandbox:0.1.16'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    shadow group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    // https://mvnrepository.com/artifact/org.webjars.bower/js-beautify
    shadow group: 'org.webjars.bower', name: 'js-beautify', version: '1.6.12'

    compile project(":thaumcraftresearchloader")
}
jar {
    if (shadow_deps > 0) {
        from {
            configurations.shadow.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

test {
    useJUnitPlatform()
}

subprojects{
    runClient.enabled =false
    runServer.enabled =false
    setupDecompWorkspace.enabled =false
    setupDevWorkspace.enabled =false
    cleanCache.enabled =false
    splitServerJar.enabled = false
    mergeJars.enabled = false
    extractNatives.enabled = false
    getAssets.enabled = false
    deobfCompileDummyTask.enabled = false
    deobfProvidedDummyTask.enabled = false
    getVersionJson.enabled = false
}